<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage\bin\Debug\MarketSage.exe">
   <Modules>
    <Module Name="marketsage.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'MarketSage.exe' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'MarketSage.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'MarketSage.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="MarketSage">
       <Types>
        <Type Name="FormAbout" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.cs" Line="32">Method 'FormAbout.FormAbout()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Version\t, ., \r\nBuild\t, \r\n.NET Framework\t".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormAbout.FormAbout()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormAbout.FormAbout()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormAbout.FormAbout()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormAbout.FormAbout()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="110">Method 'FormAbout.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "About".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="70">Method 'FormAbout.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MarketSage".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="47">Method 'FormAbout.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="83">Method 'FormAbout.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Version Info".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="59">Method 'FormAbout.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "© 2008 Jeffrey Morton".</Issue>
            </Message>
            <Message Id="MarketSage" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormAbout.designer.cs" Line="70">Correct the spelling of the unrecognized token 'MarketSage' in the literal '"MarketSage"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormMain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
           <Issue Name="UIType" Certainty="90" Level="Error">'FormMain' is coupled with 132 different (non-IComponent) types from 22 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_instr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._instr' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_isFinished" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain._isFinished' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_marketDateExceptions2" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._marketDateExceptions2' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_marketMonthHistogram" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._marketMonthHistogram' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_marketMonthHistogramCounter" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._marketMonthHistogramCounter' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_marketWeekHistogram" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._marketWeekHistogram' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_marketWeekHistogramCounter" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain._marketWeekHistogramCounter' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#aboutToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3679">In method 'FormMain.aboutToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'form' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddToRichTextBox(System.Windows.Forms.RichTextBox&amp;,System.Int32&amp;,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6892">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.AddToRichTextBox(ref RichTextBox, ref int, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6896">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'FormMain.AddToRichTextBox(ref RichTextBox, ref int, string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddToTextBox(System.Windows.Forms.TextBox&amp;,System.Int32&amp;,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6905">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.AddToTextBox(ref TextBox, ref int, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6909">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'FormMain.AddToTextBox(ref TextBox, ref int, string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerGeneticEvolution_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3130">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerGeneticEvolution_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.GC.Collect" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="System.GC.Collect" Certainty="75" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3140">Remove the call to GC.Collect from 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3139">'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3171">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " : ,  ms = ,  min".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3148">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3160">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3266">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3348">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3364">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3225">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3254">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3289">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3337">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3164">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation cancelled\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3270">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3352">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3152">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3368">Method 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3358">Modify 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3171">Correct the spelling of the unrecognized token 'ms' in the literal '" ms = "'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3171">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3171">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3171">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3177">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3179">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3190">Replace the call to 'string.operator !=(string, string)' in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3302">Replace the call to 'string.operator !=(string, string)' in 'FormMain.backgroundWorkerGeneticEvolution_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerMarketAnalysis_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3699">In method 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 're' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 're' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3704">In method 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 're' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 're' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3802">In method 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Method 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ,  - ,  : D ,  U ,  T ,  : Risk: ,  : PnL: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3825">Method 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation completed\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3820">Modify 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="PnL" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Correct the spelling of the unrecognized token 'PnL' in the literal '" : PnL: "'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3727">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3718">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3822">Change 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3724">Replace the call to 'string.operator ==(string, string)' in 'FormMain.backgroundWorkerMarketAnalysis_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerNaturalSelectionIS_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1348">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1355">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1360">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.GC.Collect" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="System.GC.Collect" Certainty="75" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1371">Remove the call to GC.Collect from 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1411">In method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1434">In method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1456">In method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1396">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " : ,  ms = ,  min".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1378">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1387">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1506">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1551">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1594">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1628">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1498">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1527">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1543">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1570">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1586">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1389">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation cancelled\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1508">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1553">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1596">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1380">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1630">Method 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1623">Modify 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1396">Correct the spelling of the unrecognized token 'ms' in the literal '" ms = "'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1396">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1396">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1396">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1414">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1415">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1437">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1438">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1439">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1459">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1460">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1461">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionIS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerNaturalSelectionOS_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2243">'FormMain.backgroundWorkerNaturalSelectionOS_DoWork(object, DoWorkEventArgs)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2246">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.GC.Collect" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="System.GC.Collect" Certainty="75" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2326">Remove the call to GC.Collect from 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2325">'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' has a cyclomatic complexity of 111. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2325">'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' has 94 local variables, 62 of which were generated by the compiler. Refactor 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2325">'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2370">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2384">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2398">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2412">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2426">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2463">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2477">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2491">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2505">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2519">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2715">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2730">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2745">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2760">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2775">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2790">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2805">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2820">In method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2353">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " : ,  ms = ,  min".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2333">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2343">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2616">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2681">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2696">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2878">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2907">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2869">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2346">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation cancelled\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2619">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2684">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2891">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2336">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2699">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2910">Method 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2691">Modify 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2902">Modify 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2353">Correct the spelling of the unrecognized token 'ms' in the literal '" ms = "'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2353">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2353">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2353">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2589">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2603">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2654">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2668">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2861">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNaturalSelectionOS_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerNeural_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3906">In method 'FormMain.backgroundWorkerNeural_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'offScreenBmp' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3913">Method 'FormMain.backgroundWorkerNeural_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Training Set completed - ,  (, )\r\n".</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3904">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNeural_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3903">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNeural_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3913">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerNeural_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerQuotes_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="793">Method 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last Updated: ,  : ,  ms = ,  min".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="776">Method 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation cancelled\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="788">Method 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation completed sucessfully\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="770">Method 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="793">Correct the spelling of the unrecognized token 'ms' in the literal '" ms = "'.</Issue>
            </Message>
            <Message Id="sucessfully" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="788">Correct the spelling of the unrecognized token 'sucessfully' in the literal '" : Operation completed sucessfully\r\n"'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="793">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="793">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="782">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="781">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="793">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerQuotes_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRandomChance_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="990">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="995">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_DoWork(object, DoWorkEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRandomChance_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.GC.Collect" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="System.GC.Collect" Certainty="75" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1005">Remove the call to GC.Collect from 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1101">Method 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " : ,  ms".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1012">Method 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1021">Method 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1024">Method 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation cancelled\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1014">Method 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1101">Correct the spelling of the unrecognized token 'ms' in the literal '" ms"'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1101">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1101">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1037">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1038">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1045">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1046">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1057">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1058">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1065">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1066">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRandomChance_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRecommendationsBuy_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3611">In method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3615">Object 'fs' can be disposed more than once in method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3615</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3528">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3622">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3564">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ---\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3571">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3589">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Constraining: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3608">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3623">Method 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation completed\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3617">Modify 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3583">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3597">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3546">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3559">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3622">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3619">Change 'FormMain.backgroundWorkerRecommendationsBuy_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6760">In method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6764">Object 'fs' can be disposed more than once in method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 6764</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6654">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6771">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6713">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ---\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6720">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6738">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Constraining: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6757">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6772">Method 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation completed\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6766">Modify 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6732">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6746">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6708">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6771">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6768">Change 'FormMain.backgroundWorkerRecommendationsBuyB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRecommendationsSell_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3499">In method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3503">Object 'fs' can be disposed more than once in method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3503</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3450">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ,  \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3437">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3510">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3479">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ---\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3496">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3511">Method 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation completed\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3448">Modify 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3505">Modify 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3489">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3474">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3510">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3507">Change 'FormMain.backgroundWorkerRecommendationsSell_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#backgroundWorkerRecommendationsSellB_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6873">In method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6877">Object 'fs' can be disposed more than once in method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 6877</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6800">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ,  \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6787">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6884">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6853">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : ---\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6870">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6885">Method 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation completed\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6798">Modify 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6879">Modify 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6863">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6848">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6884">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6881">Change 'FormMain.backgroundWorkerRecommendationsSellB_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonLoad_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3860">Method 'FormMain.buttonLoad_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Neural Network loaded - (, , , )\r\n".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3860">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonLoad_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3860">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonLoad_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3860">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonLoad_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3860">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonLoad_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonModelGeneticQueueSubmit_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="703">Replace the call to 'string.operator !=(string, string)' in 'FormMain.buttonModelGeneticQueueSubmit_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="703">Replace the call to 'string.operator !=(string, string)' in 'FormMain.buttonModelGeneticQueueSubmit_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonNew_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3850">Method 'FormMain.buttonNew_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Neural Network created - (, , , )\r\n".</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3849">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3849">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3849">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3850">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3850">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3850">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3850">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonNew_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonQueue_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="825">Replace the call to 'string.operator !=(string, string)' in 'FormMain.buttonQueue_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonSave_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3871">Method 'FormMain.buttonSave_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Neural Network saved - (, , , )\r\n".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3871">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3871">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3871">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3871">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.buttonSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonTest" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.buttonTest' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonTrain" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.buttonTrain' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxGeneticEvolution_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3018">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3100">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3115">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3007">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3042">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3089">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2928">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2935">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Engine instantiated\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2926">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3022">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3104">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3119">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3006">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3041">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3088">Method 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3109">Modify 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2928">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2946">Replace the call to 'string.operator !=(string, string)' in 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3053">Replace the call to 'string.operator !=(string, string)' in 'FormMain.checkBoxGeneticEvolution_CheckedChanged(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxNaturalSelectionIS_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1249">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1294">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1331">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1204">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1224">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1241">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1269">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1286">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1322">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1193">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1162">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Engine instantiated\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1191">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1163">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Initial balance: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1251">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1296">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1333">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1203">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1223">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1240">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1268">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1285">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1321">Method 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1326">Modify 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1163">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1193">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionIS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxNaturalSelectionOS_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1635">'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' has a cyclomatic complexity of 46. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1635">'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' has a maintainability index of 12. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1805">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1878">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1893">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1958">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1987">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1776">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1795">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1849">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1868">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1948">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1647">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1658">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1669">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1680">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1691">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1702">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1713">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1724">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Engine instantiated\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1908">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Engine instantiated\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1711">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 1 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1678">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 1 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1645">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 10 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1700">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 3 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1667">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 3 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1656">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 5 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1689">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 6 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1808">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1881">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1971">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation halted (retry @ , )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1896">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1990">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1779">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1798">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1852">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1871">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1951">Method 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1888">Modify 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1982">Modify 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1647">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1658">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1669">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1680">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1691">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1702">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1713">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1768">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1787">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1841">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1860">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="1940">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.checkBoxNaturalSelectionOS_CheckedChanged(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxRandomChance_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="892">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="904">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="915">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="975">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="967">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="926">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Engine instantiated\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="977">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Operation produced error: , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="966">Method 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="970">Modify 'FormMain.checkBoxRandomChance_CheckedChanged(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxShowState" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.checkBoxShowState' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkBoxUpdateLive_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3993">Method 'FormMain.checkBoxUpdateLive_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Live updating started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3998">Method 'FormMain.checkBoxUpdateLive_CheckedChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Live updating stopped\r\n".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanUpLogs()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5124">Method 'FormMain.CleanUpLogs()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Some one messed the system clock or the file write time was in a different time ...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5136">Method 'FormMain.CleanUpLogs()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Still Valid!".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5142">Method 'FormMain.CleanUpLogs()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "{0} file has been deleted!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5140">Method 'FormMain.CleanUpLogs()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "{0} file is being deleted!".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5115">Method 'FormMain.CleanUpLogs()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "{0,40}{1,10}{2,25}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#comboBox2_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="714">Replace the call to 'string.operator !=(string, string)' in 'FormMain.comboBox2_SelectedIndexChanged(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConnectionInfo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4693">Modify 'FormMain.ConnectionInfo()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="MarketSage.FormMain.InternetGetConnectedState(System.Int32@,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4687">'FormMain.ConnectionInfo()' calls 'FormMain.InternetGetConnectedState(ref int, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPUUsage" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_CPUUsage(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message Id="System.Windows.Forms.StatusBarPanel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4654">Method 'FormMain.CPUUsage.set(int)' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CPU usage , %".</Issue>
              </Message>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4660">Modify 'FormMain.CPUUsage.set(int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CreateLunarChart(ZedGraph.ZedGraphControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6599">Method 'FormMain.CreateLunarChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "% Change".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6598">Method 'FormMain.CreateLunarChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lunar phase".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateMonthChart(ZedGraph.ZedGraphControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6529">Method 'FormMain.CreateMonthChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "% Change".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6528">Method 'FormMain.CreateMonthChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Day of month".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSolarChart(ZedGraph.ZedGraphControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6494">Method 'FormMain.CreateSolarChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "% Change".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6493">Method 'FormMain.CreateSolarChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Day of year".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateWeekChart(ZedGraph.ZedGraphControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6564">Method 'FormMain.CreateWeekChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "% Change".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6563">Method 'FormMain.CreateWeekChart(ZedGraphControl)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Day of week".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayNeuralNetwork()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5742">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5743">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5744">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5738">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5739">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5740">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5741">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5745">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.DisplayNeuralNetwork()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmailStatus()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5659">In method 'FormMain.EmailStatus()', call System.IDisposable.Dispose on object 'clnt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5605">In method 'FormMain.EmailStatus()', call System.IDisposable.Dispose on object 'mail' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5611">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5635">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5619">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5627">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5643">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5651">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.EmailStatus()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormMain_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="333">'FormMain.FormMain_Load(object, EventArgs)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="333">'FormMain.FormMain_Load(object, EventArgs)' has a maintainability index of 16. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="462">In method 'FormMain.FormMain_Load(object, EventArgs)', object 'myDataColumn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'myDataColumn' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="518">In method 'FormMain.FormMain_Load(object, EventArgs)', object 'myDataColumn2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'myDataColumn2' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FolderBrowserDialog.set_Description(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="343">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'FolderBrowserDialog.Description.set(string)'. Retrieve the following string(s) from a resource table instead: "Please select a root data folder.\r\nAll working data will be placed under this ...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="574">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Live updating started\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="544">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Portfolio A loaded\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="559">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Portfolio B loaded\r\n".</Issue>
            </Message>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="390">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="391">Method 'FormMain.FormMain_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="433">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="449">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="489">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="505">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="546">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="561">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="611">Modify 'FormMain.FormMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="587">Be sure to set the DataTable Locale property wherever 'FormMain.FormMain_Load(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="382">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.FormMain_Load(object, EventArgs)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="382">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.FormMain_Load(object, EventArgs)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="372">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.FormMain_Load(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="435">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="451">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="491">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="507">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="548">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="563">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="613">Change 'FormMain.FormMain_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="341">Replace the call to 'string.operator ==(string, string)' in 'FormMain.FormMain_Load(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FreeMemory" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_FreeMemory(System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message Id="System.Windows.Forms.StatusBarPanel.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4642">Method 'FormMain.FreeMemory.set(float)' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " Mb Available".</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetBaseLine(MarketSage.Library.Engine,MarketSage.Library.Market,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6071">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBaseLine(Engine, Market, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6071">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBaseLine(Engine, Market, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBuyRecommendationsA()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5370">In method 'FormMain.GetBuyRecommendationsA()', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5374">Object 'fs' can be disposed more than once in method 'FormMain.GetBuyRecommendationsA()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 5374</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5359">Method 'FormMain.GetBuyRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Date range = ,  - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5367">Method 'FormMain.GetBuyRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5358">Method 'FormMain.GetBuyRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Market = , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5364">Method 'FormMain.GetBuyRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Minimum population not met.\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5357">Method 'FormMain.GetBuyRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Trading simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5353">Modify 'FormMain.GetBuyRecommendationsA()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5376">Modify 'FormMain.GetBuyRecommendationsA()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5359">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5359">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5344">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsA()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5355">Change 'FormMain.GetBuyRecommendationsA()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5378">Change 'FormMain.GetBuyRecommendationsA()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBuyRecommendationsB()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5481">In method 'FormMain.GetBuyRecommendationsB()', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5485">Object 'fs' can be disposed more than once in method 'FormMain.GetBuyRecommendationsB()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 5485</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5470">Method 'FormMain.GetBuyRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Date range = ,  - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5478">Method 'FormMain.GetBuyRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5469">Method 'FormMain.GetBuyRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Market = , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5475">Method 'FormMain.GetBuyRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Minimum population not met.\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5468">Method 'FormMain.GetBuyRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Trading simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5464">Modify 'FormMain.GetBuyRecommendationsB()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5487">Modify 'FormMain.GetBuyRecommendationsB()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5470">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5470">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5455">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetBuyRecommendationsB()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5466">Change 'FormMain.GetBuyRecommendationsB()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5489">Change 'FormMain.GetBuyRecommendationsB()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFitnessArray(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4763">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.GetFitnessArray(DataTable)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4767">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.GetFitnessArray(DataTable)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFitnessHashtable(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4754">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.GetFitnessHashtable(DataTable)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSellRecommendationsA()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5425">In method 'FormMain.GetSellRecommendationsA()', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5429">Object 'fs' can be disposed more than once in method 'FormMain.GetSellRecommendationsA()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 5429</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5414">Method 'FormMain.GetSellRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Date range = ,  - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5422">Method 'FormMain.GetSellRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5413">Method 'FormMain.GetSellRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Market = , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5419">Method 'FormMain.GetSellRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Minimum population not met.\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5412">Method 'FormMain.GetSellRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Trading simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5408">Modify 'FormMain.GetSellRecommendationsA()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5431">Modify 'FormMain.GetSellRecommendationsA()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5414">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5414">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5399">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsA()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5410">Change 'FormMain.GetSellRecommendationsA()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5433">Change 'FormMain.GetSellRecommendationsA()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSellRecommendationsB()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5537">In method 'FormMain.GetSellRecommendationsB()', call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5541">Object 'fs' can be disposed more than once in method 'FormMain.GetSellRecommendationsB()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 5541</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5526">Method 'FormMain.GetSellRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Date range = ,  - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5534">Method 'FormMain.GetSellRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating report - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5525">Method 'FormMain.GetSellRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Market = , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5531">Method 'FormMain.GetSellRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Minimum population not met.\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5524">Method 'FormMain.GetSellRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Trading simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5520">Modify 'FormMain.GetSellRecommendationsB()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5543">Modify 'FormMain.GetSellRecommendationsB()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5526">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5526">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5511">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.GetSellRecommendationsB()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5522">Change 'FormMain.GetSellRecommendationsB()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5545">Change 'FormMain.GetSellRecommendationsB()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#groupBox16" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.groupBox16' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#groupBox17" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.groupBox17' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2076">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1032">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-----".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1511">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2055">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2258">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2394">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4405">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4416">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4427">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4437">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4460">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4489">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4513">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4537">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4549">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4585">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4609">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4633">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4645">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1126">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2978">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2993">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3029">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3047">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3098">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3127">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3143">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1075">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1093">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "3".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3173">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "3".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3070">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "6".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3158">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "6".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4478">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5643">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Account".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="957">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Acquire".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1709">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Alert".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2066">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Alert".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2248">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Alert".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2384">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Alert".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3037">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Alpha ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4469">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "B".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1294">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Baseline".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1333">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Baseline".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5001">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Buy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5321">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Buy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1680">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cache:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4525">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cash:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4621">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cash:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5660">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cash:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5776">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cash:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2551">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Chart".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5883">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Chromosome".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4882">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Constraints".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5202">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Constraints".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1827">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Custom".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3892">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cyclical Price Movement".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4370">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "DJIA".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1055">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Date Exceptions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2904">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Desired Outputs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1930">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Evolution".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2503">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Evolution".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3055">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Gamma ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6359">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Genome".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2839">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hidden Layer Weights".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2878">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hidden Units".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3199">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hidden".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3735">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic Performance".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2153">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2455">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1160">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "IXNDX".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1102">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Import".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1186">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Import".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1698">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Indicators:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2865">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Input Units".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3186">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Input".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3225">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Iterations".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3006">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Learning Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2651">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Load".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1399">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Market:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6754">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MarketSage".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1418">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4382">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "NASDAQ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1136">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nasdaq".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1810">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Natural Selection".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3212">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Network Error".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2530">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Neural Network".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2594">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "New".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1198">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OpenTick".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2852">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Output Layer Weights".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2891">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Output Units".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3083">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Output".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2963">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Overview".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4038">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Overview".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1689">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Period:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4501">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL%:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4597">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL%:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4573">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4669">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5696">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5812">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PnL:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4098">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Positions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4191">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Positions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4357">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Push".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5625">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Push".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1884">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Queue".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1905">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Queue".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1444">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random Chance".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3019">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random Noise".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1468">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1488">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1955">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Random".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1380">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Range:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5826">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ready".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4680">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Recommendations".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3235">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Report".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1255">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Risk/Reward".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1358">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Risk/Reward".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1219">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Run".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4394">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "S&amp;&amp;P 500".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2316">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sample".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2479">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sample".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1348">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Logs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2623">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4939">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sell".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5259">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sell".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2825">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1232">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stage".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1722">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2097">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2293">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2429">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2930">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "State Layer Weights".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2917">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "State Units".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2698">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "State".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3111">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "State".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1114">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3258">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Strategy Population".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1043">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Symbol Exceptions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2640">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4017">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Trade".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="2611">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Train".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4139">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Transactions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4232">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Transactions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4913">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Unanimity".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5233">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Unanimity".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4448">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Update".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4561">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4657">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5686">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5802">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1002">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Yahoo".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1210">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "http://feed1.opentick.com".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1023">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "http://ichart.finance.yahoo.com/table.csv?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1150">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "http://www.nasdaq.com/asp/index_component.asp?symbol=".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="747">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "menuStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGrid.set_CaptionText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3382">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3466">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3497">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3545">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3576">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3642">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3673">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="3704">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6123">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6154">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6388">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6472">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6503">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6551">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6582">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6648">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6679">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6710">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGrid.CaptionText.set(string)'. Retrieve the following string(s) from a resource table instead: "Historic".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.NotifyIcon.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5344">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'NotifyIcon.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MarketSage".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.StatusBarPanel.set_Name(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5838">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.Name.set(string)'. Retrieve the following string(s) from a resource table instead: "statusBarPanelCPU".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5831">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.Name.set(string)'. Retrieve the following string(s) from a resource table instead: "statusBarPanelInfo".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5844">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.Name.set(string)'. Retrieve the following string(s) from a resource table instead: "statusBarPanelMem".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.StatusBarPanel.set_ToolTipText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5845">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Available memory".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5839">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "CPU usage".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5832">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'StatusBarPanel.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Network connection".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="916">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;About...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="891">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Contents".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="797">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Customize".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="768">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Edit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="755">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="884">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Help".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="898">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Index".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="804">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Options".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="928">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Plugins".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="850">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Schedules".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="905">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Search".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="862">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Throttle".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="790">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Tools".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="774">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;View".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="832">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cycles".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="761">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "E&amp;xit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="825">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Performance".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="819">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reports".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="838">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="869">Method 'FormMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Test".</Issue>
            </Message>
            <Message Id="MarketSage" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5344">Correct the spelling of the unrecognized token 'MarketSage' in the literal '"MarketSage"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="6754">Correct the spelling of the unrecognized token 'MarketSage' in the literal '"MarketSage"'.</Issue>
            </Message>
            <Message Id="Nasdaq" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1136">Correct the spelling of the unrecognized token 'Nasdaq' in the literal '"Nasdaq"'.</Issue>
            </Message>
            <Message Id="OpenTick" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1198">Correct the spelling of the unrecognized token 'OpenTick' in the literal '"OpenTick"'.</Issue>
            </Message>
            <Message Id="PnL" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4501">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL%:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4597">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL%:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4573">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="4669">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5696">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5812">Correct the spelling of the unrecognized token 'PnL' in the literal '"PnL:"'.</Issue>
            </Message>
            <Message Id="ichart" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1023">Correct the spelling of the unrecognized token 'ichart' in the literal '"http://ichart.finance.yahoo.com/table.csv?"'.</Issue>
            </Message>
            <Message Id="indexcomponent" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1150">Correct the spelling of the unrecognized token 'indexcomponent' in the literal '"http://www.nasdaq.com/asp/index_component.asp?symbol="'.</Issue>
            </Message>
            <Message Id="nasdaq" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1150">Correct the spelling of the unrecognized token 'nasdaq' in the literal '"http://www.nasdaq.com/asp/index_component.asp?symbol="'.</Issue>
            </Message>
            <Message Id="opentick" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="1210">Correct the spelling of the unrecognized token 'opentick' in the literal '"http://feed1.opentick.com"'.</Issue>
            </Message>
            <Message Id="statusBarPanelCPU" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5838">Correct the spelling of the unrecognized token 'statusBarPanelCPU' in the literal '"statusBarPanelCPU"'.</Issue>
            </Message>
            <Message Id="statusBarPanelInfo" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5831">Correct the spelling of the unrecognized token 'statusBarPanelInfo' in the literal '"statusBarPanelInfo"'.</Issue>
            </Message>
            <Message Id="statusBarPanelMem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.Designer.cs" Line="5844">Correct the spelling of the unrecognized token 'statusBarPanelMem' in the literal '"statusBarPanelMem"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeTable(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4594">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.InitializeTable(ref DataTable)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4595">Be sure to set the DataTable Locale property wherever 'FormMain.InitializeTable(ref DataTable)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InternetAutodial(System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'FormMain.InternetAutodial(int, int)', correct the spelling of 'dw' in parameter name 'dwFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="hwnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'FormMain.InternetAutodial(int, int)', correct the spelling of 'hwnd' in parameter name 'hwndParent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'FormMain.InternetAutodial(int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwndParent' of P/Invoke 'FormMain.InternetAutodial(int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'FormMain.InternetAutodial(int, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error">In member 'FormMain.InternetAutodial(int, int)', replace the term 'Flags' in parameter name 'dwFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InternetGetConnectedState(System.Int32&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpdwFlags' be a reference parameter.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'FormMain.InternetGetConnectedState(ref int, int)', correct the spelling of 'dw' in parameter name 'dwReserved' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lpdw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'FormMain.InternetGetConnectedState(ref int, int)', correct the spelling of 'lpdw' in parameter name 'lpdwFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'FormMain.InternetGetConnectedState(ref int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'FormMain.InternetGetConnectedState(ref int, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error">In member 'FormMain.InternetGetConnectedState(ref int, int)', replace the term 'Flags' in parameter name 'lpdwFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InternetGetConnectedStateString()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4727">Modify 'FormMain.InternetGetConnectedStateString()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4699">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.InternetGetConnectedStateString()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label42" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label42' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label43" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label43' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label44" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label44' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label45" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label45' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label46" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label46' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label47" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label47' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label48" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label48' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label49" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label49' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label50" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label50' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label51" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label51' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label54" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label54' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label55" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label55' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label56" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label56' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label57" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label57' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label58" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label58' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label59" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.label59' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadBaseLineFile()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6055">In method 'FormMain.LoadBaseLineFile()', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6066">Object 'fs' can be disposed more than once in method 'FormMain.LoadBaseLineFile()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 6066</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6057">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6058">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6059">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6060">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6061">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6062">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6063">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6064">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadBaseLineFile()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadIndexes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4028">'FormMain.LoadIndexes()' has a cyclomatic complexity of 83. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4028">'FormMain.LoadIndexes()' has 83 local variables, 44 of which were generated by the compiler. Refactor 'FormMain.LoadIndexes()' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4028">'FormMain.LoadIndexes()' has a maintainability index of 6. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4046">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4068">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4082">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4098">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4112">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4128">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4142">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4155">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4170">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4183">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4197">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4210">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4225">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4238">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4252">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4265">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4280">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4293">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4307">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4320">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4335">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4348">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4362">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4377">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4390">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4405">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4419">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4433">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4447">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4461">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4475">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4489">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4503">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4517">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4531">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4545">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4559">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4573">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4587">Modify 'FormMain.LoadIndexes()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4035">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4042">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4057">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4064">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4088">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4089">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4118">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4119">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4368">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4395">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.LoadIndexes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4048">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4070">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4084">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4100">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4114">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4130">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4144">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4157">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4172">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4185">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4199">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4212">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4227">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4240">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4254">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4267">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4282">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4295">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4309">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4322">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4337">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4350">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4364">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4379">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4392">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4407">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4421">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4435">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4449">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4463">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4477">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4491">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4505">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4519">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4533">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4547">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4561">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4575">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4589">Change 'FormMain.LoadIndexes()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadSchedules()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4865">In method 'FormMain.LoadSchedules()', object 'xr' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'xr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LunarPhaseHistogram(MarketSage.Library.Instrument)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6470">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.LunarPhaseHistogram(Instrument)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonthPeriodHistogram(MarketSage.Library.Instrument)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6434">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.MonthPeriodHistogram(Instrument)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myBar" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain.myBar' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myBarLunar" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain.myBarLunar' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myLine" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain.myLine' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myLineLunar" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FormMain.myLineLunar' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxGraph" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxGraph' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxHidden" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxHidden' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxHiddenWeights" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxHiddenWeights' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxInput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxInput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxOutput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxOutput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxOutputDesired" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxOutputDesired' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxOutputWeights" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxOutputWeights' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxState" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxState' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pictureBoxStateWeights" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.pictureBoxStateWeights' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pluginsToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3969">In method 'FormMain.pluginsToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'form' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PortfolioDataGrid_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItemCollection.Add(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3644">Method 'FormMain.PortfolioDataGrid_MouseClick(object, MouseEventArgs)' passes a literal string as parameter 'text' of a call to 'ToolStripItemCollection.Add(string)'. Retrieve the following string(s) from a resource table instead: " : ".</Issue>
            </Message>
            <Message Id="_dataRowIndexForContextMenu" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3645">'FormMain.PortfolioDataGrid_MouseClick(object, MouseEventArgs)' declares a variable, '_dataRowIndexForContextMenu', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessRecommendationsA()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5203">Method 'FormMain.ProcessRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Bought ,  shares of ,  @ ,  + 7.00\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5222">Method 'FormMain.ProcessRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Bought ,  shares of ,  @ ,  + 7.00\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5174">Method 'FormMain.ProcessRecommendationsA()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Sold  shares of ,  @ ,  + 7.00\r\n".</Issue>
            </Message>
            <Message Id="name" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5171">'FormMain.ProcessRecommendationsA()' declares a variable, 'name', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5174">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5203">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5222">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5172">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5195">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5198">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5214">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5217">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5174">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5203">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5203">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5222">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5222">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsA()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessRecommendationsB()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5276">Method 'FormMain.ProcessRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Portfolio B bought ,  shares of ,  @ ,  + 7.00\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5295">Method 'FormMain.ProcessRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Portfolio B bought ,  shares of ,  @ ,  + 7.00\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5247">Method 'FormMain.ProcessRecommendationsB()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Portfolio B sold  shares of ,  @ ,  + 7.00\r\n".</Issue>
            </Message>
            <Message Id="name" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5244">'FormMain.ProcessRecommendationsB()' declares a variable, 'name', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5247">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5276">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5295">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5245">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5268">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5271">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5287">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5290">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5247">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5276">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5276">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5295">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5295">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.ProcessRecommendationsB()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prune()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2002">'FormMain.Prune()' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2002">'FormMain.Prune()' has 72 local variables, 35 of which were generated by the compiler. Refactor 'FormMain.Prune()' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2013">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2043">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2076">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2109">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2141">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2172">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2205">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2236">In method 'FormMain.Prune()', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="2016">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.Prune()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScheduleCallBack(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4811">'FormMain.ScheduleCallBack(string)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#schedulesToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="3963">In method 'FormMain.schedulesToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'form' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showNeurons(System.Windows.Forms.PictureBox&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5749">In method 'FormMain.showNeurons(ref PictureBox, int)', object 'offScreenBmp' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'offScreenBmp' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5758">In method 'FormMain.showNeurons(ref PictureBox, int)', call System.IDisposable.Dispose on object 'br' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5815">In method 'FormMain.showNeurons(ref PictureBox, int)', call System.IDisposable.Dispose on object 'brush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5814">In method 'FormMain.showNeurons(ref PictureBox, int)', call System.IDisposable.Dispose on object 'pen' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5748">Consider a design that does not require that 'canvas' be a reference parameter.</Issue>
            </Message>
            <Message Id="show" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5748">Correct the casing of 'show' in member name 'FormMain.showNeurons(ref PictureBox, int)' by changing it to 'Show'.</Issue>
            </Message>
            <Message Id="br" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5758">'FormMain.showNeurons(ref PictureBox, int)' declares a variable, 'br', of type 'Brush', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="pen" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5814">'FormMain.showNeurons(ref PictureBox, int)' declares a variable, 'pen', of type 'Pen', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5749">In externally visible method 'FormMain.showNeurons(ref PictureBox, int)', validate local variable ''(*canvas)'', which was reassigned from parameter 'canvas', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showOutputGraph(System.Drawing.Bitmap&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5914">In method 'FormMain.showOutputGraph(ref Bitmap, int)', call System.IDisposable.Dispose on object 'pen' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5915">In method 'FormMain.showOutputGraph(ref Bitmap, int)', call System.IDisposable.Dispose on object 'pen2' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5913">Consider a design that does not require that 'offScreenBmp' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5913">In member 'FormMain.showOutputGraph(ref Bitmap, int)', correct the casing of 'Output' in parameter name 'OutputIndex' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="show" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5913">Correct the casing of 'show' in member name 'FormMain.showOutputGraph(ref Bitmap, int)' by changing it to 'Show'.</Issue>
            </Message>
            <Message Id="System.Double.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5940">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.showOutputGraph(ref Bitmap, int)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5941">Because the behavior of 'double.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.showOutputGraph(ref Bitmap, int)' with a call to 'double.Parse(string, IFormatProvider)'. If the result of 'double.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5936">In externally visible method 'FormMain.showOutputGraph(ref Bitmap, int)', validate local variable ''(*offScreenBmp)'', which was reassigned from parameter 'offScreenBmp', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showWeights(System.Windows.Forms.PictureBox&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5832">In method 'FormMain.showWeights(ref PictureBox, int)', object 'offScreenBmp' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'offScreenBmp' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5842">In method 'FormMain.showWeights(ref PictureBox, int)', call System.IDisposable.Dispose on object 'br' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5895">In method 'FormMain.showWeights(ref PictureBox, int)', call System.IDisposable.Dispose on object 'brush' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5894">In method 'FormMain.showWeights(ref PictureBox, int)', call System.IDisposable.Dispose on object 'pen' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5831">Consider a design that does not require that 'canvas' be a reference parameter.</Issue>
            </Message>
            <Message Id="show" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5831">Correct the casing of 'show' in member name 'FormMain.showWeights(ref PictureBox, int)' by changing it to 'Show'.</Issue>
            </Message>
            <Message Id="br" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5842">'FormMain.showWeights(ref PictureBox, int)' declares a variable, 'br', of type 'Brush', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="pen" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5894">'FormMain.showWeights(ref PictureBox, int)' declares a variable, 'pen', of type 'Pen', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5832">In externally visible method 'FormMain.showWeights(ref PictureBox, int)', validate local variable ''(*canvas)'', which was reassigned from parameter 'canvas', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tabPageQuotes_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="817">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.tabPageQuotes_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="regex" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="809">'regex', a variable declared in 'FormMain.tabPageQuotes_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="subdirectoryEntries" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="809">'subdirectoryEntries', a variable declared in 'FormMain.tabPageQuotes_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#testToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4017">In method 'FormMain.testToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'form' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxError" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxError' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxHidden" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxHidden' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxInput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxInput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxIterations" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxIterations' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxNoise" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxNoise' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxOutput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxOutput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxRate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxRate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBoxState" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FormMain.textBoxState' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Train(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5705">Parameter 'e' of 'FormMain.Train(BackgroundWorker, DoWorkEventArgs)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TwitterStatus()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5698">Method 'FormMain.TwitterStatus()' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string)'. Retrieve the following string(s) from a resource table instead: "Connection Error".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5696">Modify 'FormMain.TwitterStatus()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5698">Change 'FormMain.TwitterStatus()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateBaseLineFile()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6038">In method 'FormMain.UpdateBaseLineFile()', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6049">Object 'fs' can be disposed more than once in method 'FormMain.UpdateBaseLineFile()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 6049</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5973">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5982">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5991">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6000">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6009">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6018">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6027">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6036">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Done (, )\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6034">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 1 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6007">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 1 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5980">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 10 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6025">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 3 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5998">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 3 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5989">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 5 year baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6016">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating 6 month baseline\r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5971">Method 'FormMain.UpdateBaseLineFile()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Generating historic baseline\r\n".</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5973">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5982">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5991">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6000">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6009">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6018">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6027">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6036">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6040">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6041">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6042">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6043">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6044">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6045">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6046">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6047">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateBaseLineFile()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateHistoricChart(ZedGraph.ZedGraphControl,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6087">'FormMain.UpdateHistoricChart(ZedGraphControl, int)' has a maintainability index of 18. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6090">Method 'FormMain.UpdateHistoricChart(ZedGraphControl, int)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6091">Method 'FormMain.UpdateHistoricChart(ZedGraphControl, int)' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Value".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6103">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateHistoricChart(ZedGraphControl, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6103">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateHistoricChart(ZedGraphControl, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMarketAnalysis()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5565">In method 'FormMain.UpdateMarketAnalysis()', call System.IDisposable.Dispose on object 'sr' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5599">Method 'FormMain.UpdateMarketAnalysis()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Market file , \\!INDEX.xml does not exist!".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.TextBoxBase.AppendText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5578">Method 'FormMain.UpdateMarketAnalysis()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Date range = ,  - , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5577">Method 'FormMain.UpdateMarketAnalysis()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Market = , \r\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5576">Method 'FormMain.UpdateMarketAnalysis()' passes a literal string as parameter 'text' of a call to 'TextBoxBase.AppendText(string)'. Retrieve the following string(s) from a resource table instead: " : Trading simulation started\r\n".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5592">Modify 'FormMain.UpdateMarketAnalysis()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5569">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateMarketAnalysis()' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5578">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateMarketAnalysis()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5578">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateMarketAnalysis()' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5594">Change 'FormMain.UpdateMarketAnalysis()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5599">Change 'FormMain.UpdateMarketAnalysis()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMarketData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4797">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateMarketData()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMarketTechnicalData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="4785">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdateMarketTechnicalData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatePortfolioDisplayA()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5043">Method 'FormMain.UpdatePortfolioDisplayA()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5044">Method 'FormMain.UpdatePortfolioDisplayA()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5053">Method 'FormMain.UpdatePortfolioDisplayA()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5062">Method 'FormMain.UpdatePortfolioDisplayA()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5065">Method 'FormMain.UpdatePortfolioDisplayA()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last Updated: ".</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5043">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayA()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5044">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayA()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5053">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayA()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5062">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayA()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatePortfolioDisplayB()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5096">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "   ,        ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5071">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5072">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5081">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "$".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5090">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5098">Method 'FormMain.UpdatePortfolioDisplayB()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last Updated: ".</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5071">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayB()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5072">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayB()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5081">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayB()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="5090">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormMain.UpdatePortfolioDisplayB()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WeekPeriodHistogram(MarketSage.Library.Instrument)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6452">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.WeekPeriodHistogram(Instrument)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#YearPeriodHistogram(MarketSage.Library.Instrument)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormMain.cs" Line="6416">The 'this' parameter (or 'Me' in Visual Basic) of 'FormMain.YearPeriodHistogram(Instrument)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormPlugins" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FormPlugins_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Reflection.Assembly.LoadFrom" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="System.Reflection.Assembly.LoadFrom" Certainty="75" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.cs" Line="45">Remove the call to Assembly.LoadFrom from 'FormPlugins.FormPlugins_Load(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.designer.cs" Line="117">Method 'FormPlugins.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-------".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.designer.cs" Line="107">Method 'FormPlugins.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Author:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.designer.cs" Line="89">Method 'FormPlugins.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Description:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.designer.cs" Line="134">Method 'FormPlugins.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Plugins".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormPlugins.designer.cs" Line="98">Method 'FormPlugins.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Version:".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormSchedules" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="179">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="189">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Next Invoke Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="184">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Type".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="421">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "   Run only on".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="433">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "  Run only between these times".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="529">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " Schedules".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="241">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "60".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="207">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="359">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "At regular intervals".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="215">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Close".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="482">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Create".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="349">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Daily".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="198">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="224">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Double click on a schedule to edit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="498">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Filename:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="267">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Fri".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="249">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Interval :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="307">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mon".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="331">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Monthly".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="467">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Name :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="370">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Run only once".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="257">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sat".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="405">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Schedule Type".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="323">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start Time :".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="315">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sun".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="277">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Thu".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="297">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tue".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="390">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Update".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="287">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wed".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="340">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Weekly".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="441">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "and".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="232">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "secs".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DateTimePicker.set_CustomFormat(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "MM\'/\'dd\'/\'yyyy   hh:mm:ss tt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="445">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "hh:mm tt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="454">Method 'FormSchedules.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "hh:mm tt".</Issue>
            </Message>
            <Message Id="dd" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Correct the spelling of the unrecognized token 'dd' in the literal '"MM\'/\'dd\'/\'yyyy   hh:mm:ss tt"'.</Issue>
            </Message>
            <Message Id="hh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Correct the spelling of the unrecognized token 'hh' in the literal '"MM\'/\'dd\'/\'yyyy   hh:mm:ss tt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="445">Correct the spelling of the unrecognized token 'hh' in the literal '"hh:mm tt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="454">Correct the spelling of the unrecognized token 'hh' in the literal '"hh:mm tt"'.</Issue>
            </Message>
            <Message Id="secs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="232">Correct the spelling of the unrecognized token 'secs' in the literal '"secs"'.</Issue>
            </Message>
            <Message Id="ss" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Correct the spelling of the unrecognized token 'ss' in the literal '"MM\'/\'dd\'/\'yyyy   hh:mm:ss tt"'.</Issue>
            </Message>
            <Message Id="tt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Correct the spelling of the unrecognized token 'tt' in the literal '"MM\'/\'dd\'/\'yyyy   hh:mm:ss tt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="445">Correct the spelling of the unrecognized token 'tt' in the literal '"hh:mm tt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="454">Correct the spelling of the unrecognized token 'tt' in the literal '"hh:mm tt"'.</Issue>
            </Message>
            <Message Id="yyyy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="375">Correct the spelling of the unrecognized token 'yyyy' in the literal '"MM\'/\'dd\'/\'yyyy   hh:mm:ss tt"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnCreateSchedule(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="576">In method 'FormSchedules.OnCreateSchedule(object, EventArgs)', call System.IDisposable.Dispose on object 'xw1' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="580">Modify 'FormSchedules.OnCreateSchedule(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="582">Change 'FormSchedules.OnCreateSchedule(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDeleteSchedule(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="679">Method 'FormSchedules.OnDeleteSchedule(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "No schedule is selected for deletion".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="679">Change 'FormSchedules.OnDeleteSchedule(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnScheduleDblClk(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="628">Method 'FormSchedules.OnScheduleDblClk(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Schedule not found !".</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="635">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FormSchedules.OnScheduleDblClk(object, EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="628">Change 'FormSchedules.OnScheduleDblClk(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnSchedulerEvent(MarketSage.Library.Scheduler+SchedulerEventType,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="654">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormSchedules.OnSchedulerEvent(Scheduler.SchedulerEventType, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="666">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FormSchedules.OnSchedulerEvent(Scheduler.SchedulerEventType, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnScheduleTypeChange(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="553">'sender', a parameter, is cast to type 'RadioButton' multiple times in method 'FormSchedules.OnScheduleTypeChange(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnUpdateSchedule(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="FormSchedules.cs" Line="701">In method 'FormSchedules.OnUpdateSchedule(object, EventArgs)', object 'xw1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'xw1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Ticker" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="Ticker.cs" Line="20">Modify the call to 'Timer.Interval.set(int)' in method 'Ticker.Ticker()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="Ticker.cs" Line="53">In method 'Ticker.OnPaint(PaintEventArgs)', object 'bbr' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bbr' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="Ticker.cs" Line="54">In method 'Ticker.OnPaint(PaintEventArgs)', object 'fbr' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fbr' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="Ticker.cs" Line="57">In externally visible method 'Ticker.OnPaint(PaintEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ZedGraphChart" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddBar(MarketSage.Library.Bars,MarketSage.Library.Bars)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="close" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="503">'ZedGraphChart.AddBar(Bars, Bars)' declares a variable, 'close', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="high" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="500">'ZedGraphChart.AddBar(Bars, Bars)' declares a variable, 'high', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="low" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="501">'ZedGraphChart.AddBar(Bars, Bars)' declares a variable, 'low', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="open" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="502">'ZedGraphChart.AddBar(Bars, Bars)' declares a variable, 'open', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="416">In externally visible method 'ZedGraphChart.AddBar(Bars, Bars)', validate parameter 'updateSeries' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="423">In externally visible method 'ZedGraphChart.AddBar(Bars, Bars)', validate parameter 'displaySeries' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#barToXAxis(System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bar" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="362">Correct the casing of 'bar' in member name 'ZedGraphChart.barToXAxis(double)' by changing it to 'Bar'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ButtonVolumeTestClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="938">'ZedGraphChart.ButtonVolumeTestClick(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateIndicators()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="665">The 'this' parameter (or 'Me' in Visual Basic) of 'ZedGraphChart.CreateIndicators()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateLine(System.Drawing.Color,System.Double,System.Double,System.Double,System.Double,MarketSage.Library.LineStyle)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="390">The 'this' parameter (or 'Me' in Visual Basic) of 'ZedGraphChart.CreateLine(Color, double, double, double, double, LineStyle)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataGraphContextMenuBuilder(ZedGraph.ZedGraphControl,System.Windows.Forms.ContextMenuStrip,System.Drawing.Point,ZedGraph.ZedGraphControl+ContextMenuObjectState)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="960">In method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)', call System.IDisposable.Dispose on object 'item' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="973">In method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)', call System.IDisposable.Dispose on object 'item' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="990">In method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)', call System.IDisposable.Dispose on object 'item' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="979">Method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Disable Auto Scroll".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="996">Method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Disable Compact".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="981">Method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Enable Auto Scroll".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="998">Method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Enable Compact".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="965">Method 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Zoom to Last".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="1004">Modify 'ZedGraphChart.DataGraphContextMenuBuilder(ZedGraphControl, ContextMenuStrip, Point, ZedGraphControl.ContextMenuObjectState)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataGraphMouseMoveEvent(ZedGraph.ZedGraphControl,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="830">Method 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " , , O:, , H:, , L:, , C:, , Bar: , , Period: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="827">Method 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: ", ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="840">Modify 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="827">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="830">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="830">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="830">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="830">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ZedGraphChart.DataGraphMouseMoveEvent(ZedGraphControl, MouseEventArgs)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBox(System.Drawing.Color,System.Int32,System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="319">In member 'ZedGraphChart.DrawBox(Color, int, double, double, double)', change parameter name 'bar' to 'bar1' in order to match the identifier as it has been declared in 'Chart.DrawBox(Color, int, double, double, double)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawLine(System.Drawing.Color,System.Drawing.Point,System.Drawing.Point,MarketSage.Library.LineStyle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="350">In method 'ZedGraphChart.DrawLine(Color, Point, Point, LineStyle)', correct the spelling of 'p' in parameter name 'p1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="350">In method 'ZedGraphChart.DrawLine(Color, Point, Point, LineStyle)', correct the spelling of 'p' in parameter name 'p2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="rotator" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="158">'ZedGraphChart.InitializeChart()' declares a variable, 'rotator', of type 'ColorSymbolRotator', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="yLables" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="157">'ZedGraphChart.InitializeChart()' declares a variable, 'yLables', of type 'string[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="135">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Chart Log".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="123">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Notify Audio".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="113">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "On Top".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="149">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TestRun".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="93">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "statusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="99">Method 'ZedGraphChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "toolStripStatusXY".</Issue>
            </Message>
            <Message Id="TestRun" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="149">Correct the spelling of the unrecognized token 'TestRun' in the literal '"TestRun"'.</Issue>
            </Message>
            <Message Id="toolStripStatusXY" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.designer.cs" Line="99">Correct the spelling of the unrecognized token 'toolStripStatusXY' in the literal '"toolStripStatusXY"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeTick(MarketSage.Library.Tick)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="529">In externally visible method 'ZedGraphChart.InitializeTick(Tick)', validate parameter 'tick' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lineList" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ZedGraphChart.lineList' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveByPixels(ZedGraph.Scale,System.Double,System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="615">The 'this' parameter (or 'Me' in Visual Basic) of 'ZedGraphChart.MoveByPixels(Scale, double, float)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessKeys(System.Windows.Forms.Keys)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="897">The 'this' parameter (or 'Me' in Visual Basic) of 'ZedGraphChart.ProcessKeys(Keys)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#refreshTick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="871">Modify 'ZedGraphChart.refreshTick(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="861">Modify the call to 'Timer.Interval.set(int)' in method 'ZedGraphChart.refreshTick(object, EventArgs)' to set the timer interval to a value that's greater than or equal to one second.</Issue>
             <Issue Certainty="90" Level="Error" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="863">Modify the call to 'Timer.Interval.set(int)' in method 'ZedGraphChart.refreshTick(object, EventArgs)' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#secondaryPaneList" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ZedGraphChart.secondaryPaneList' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setLayout()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="paneList" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\jeffr\Documents\GitHub\MarketSage\MarketSage" File="ZedGraphChart.cs" Line="166">'ZedGraphChart.setLayout()' declares a variable, 'paneList', of type 'PaneList', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#signalPaneList" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ZedGraphChart.signalPaneList' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MarketSage.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2019-03-25 01:08:28Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001">
   <Name>Avoid calling problematic methods</Name>
   <Description>Avoid making unnecessary and potentially dangerous method calls.</Description>
   <Resolution Name="System.GC.Collect">Remove the call to GC.Collect from {0}. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Resolution>
   <Resolution Name="System.Reflection.Assembly.LoadFrom">Remove the call to Assembly.LoadFrom from {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385973.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="reliabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="UIType">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 6877</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601">
   <Name>Do not use timers that prevent power state changes</Name>
   <Description>Do not poll more often than or utilize timers that fire more frequently than once per second. Higher frequency periodic activity will keep the CPU busy and interfere with power-saving idle timers that turn off the display and hard disks.</Description>
   <Resolution Name="Default">Modify the call to {0} in method {1} to set the timer interval to a value that's greater than or equal to one second.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182230.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="mobilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="MemberParameterNoAlternate">In member {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
